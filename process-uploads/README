
The process-uploads.sh script will process uploads from the ci pipelines
connected to the mm-toolbox (packages) and meta-imagebuilder (images)
repositores. It is intended to run via cron as an unpriviliged user, e.g.:

# crontab -u uploader -l

* * * * * /usr/local/glue/process-uploads/process-uploads.sh

Installation:

The 'mkhash.c' file needs to be compiled:

  $ gcc mkhash.c -o mkhash

Then copy all the files in this directory to the machine that will run the cron
job, and install the cron job. Make sure the `/home/uploader` directory exists.

Execution:

The process-uploads.sh script is silent when it does nothing; when it updates a
package repository and/or an image directory it will print some output.

What does the script do?

Packages:

The script looks for uploads in the ~uploader/uploads/ directory. It creates a
staging area for the repository in ~uploaders/repo-staging/. It will rsync the
repo-staging area to /var/www/html/snapshots/packages/${arch}/generic, with the
--delete option. If that all works without error, it will then move processed
uploads to the ~uploader/uploads-processed/ directory.

Images:

The script looks for uploads in the ~uploader/image-uploads/ directory. If the
uploaded directory contains at least as many entries as the destination
directory, it will rsync the uploaded directory to
/var/www/html/snapshots/images/${profile}/${device}, with the --delete option.
If that all works without error, it will then move processed uploads to the
~uploader/image-uploads-processed/ directory.

The --noop argument:

When run with the '--noop' argument, the script will update the package
repository staging area and run the rsync to the public repository directory
with the --dry-run option. It will not move the processed directories from
~uploader/uploads/ to ~uploader/uploads-processed/. Similarly for images: the
rsync to the destination directory will be run with the --dry-run option, and
the processed directories will not be moved from ~uploader/image-uploads to
~uploader/image-uploads-processed/.
